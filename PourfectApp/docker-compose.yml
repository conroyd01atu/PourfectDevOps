version: '3.8'

services:
  pourfectapp:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: pourfectapp-main
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    volumes:
      - app-data:/app/data
      - app-logs:/app/logs
    networks:
      - pourfect-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/app/health.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx reverse proxy for load balancing
  nginx:
    image: nginx:alpine
    container_name: pourfectapp-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - pourfectapp
    networks:
      - pourfect-network
    restart: unless-stopped

  # Redis for caching for demonstrating multi-service architecture
  redis:
    image: redis:alpine
    container_name: pourfectapp-cache
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - pourfect-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: pourfectapp-monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - pourfect-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

networks:
  pourfect-network:
    driver: bridge
    name: pourfect-network

volumes:
  app-data:
    name: pourfect-app-data
  app-logs:
    name: pourfect-app-logs
  redis-data:
    name: pourfect-redis-data
  prometheus-data:
    name: pourfect-prometheus-data
